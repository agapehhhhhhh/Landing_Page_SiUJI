# ===========================================
# SIUJI LANDING PAGE ENVIRONMENT VARIABLES
# ===========================================
# Copy this file to .env and configure for your environment

# ENVIRONMENT CONFIGURATION
NODE_ENV=development
DOCKER_TARGET=development

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# Choose ONE of the following database configurations:

# ---- OPTION 1: DOCKER DATABASE (Recommended for team development) ----
# Uncomment lines below for Docker database:
DATABASE_URI=postgresql://user:password@db:5432/siuji_db
DB_USER=user
DB_PASSWORD=password
DB_NAME=siuji_db
DB_HOST=db
DB_PORT=5432

# ---- OPTION 2: LOCAL DATABASE (For local PostgreSQL installation) ----
# Uncomment lines below for local database:
# DATABASE_URI=postgresql://postgres:root@localhost:5432/landingpage-cms
# DB_USER=postgres
# DB_PASSWORD=root
# DB_NAME=landingpage-cms
# DB_HOST=localhost
# DB_PORT=5432

# Database port exposure (comment out for production)
DB_PORT_EXPOSE=5432

# ===========================================
# PAYLOAD CMS CONFIGURATION
# ===========================================

# Payload Secret Key (IMPORTANT: Generate your own secret!)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
PAYLOAD_SECRET=generate-your-own-secret-key-64-chars-minimum-length-required

# ===========================================
# FRONTEND CONFIGURATION
# ===========================================

# API URL for Frontend (direct ke backend)
VITE_API_URL=http://localhost:3000/api

# ===========================================
# CORS & SECURITY CONFIGURATION
# ===========================================

# CORS Origins (comma separated)
CORS_ORIGINS=http://localhost:5173,http://localhost:3000

# CSRF Origins (comma separated)
CSRF_ORIGINS=http://localhost:5173

# ===========================================
# PRODUCTION SETTINGS
# ===========================================
# Uncomment these for production and comment out development settings above

# NODE_ENV=production
# DOCKER_TARGET=production
# DATABASE_URI=postgresql://siuji_user:your-strong-production-password@db:5432/siuji_production
# DB_USER=siuji_user
# DB_PASSWORD=your-strong-production-password
# DB_NAME=siuji_production
# DB_PORT_EXPOSE=
# PAYLOAD_SECRET=your-production-payload-secret-64-chars-long
# VITE_API_URL=https://your-domain.com/api
# CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com
# CSRF_ORIGINS=https://your-domain.com

# ===========================================
# DEVELOPMENT WORKFLOW EXAMPLES
# ===========================================

# üê≥ FOR DOCKER DEVELOPMENT (Recommended):
# 1. Copy this file: cp .env.example .env
# 2. Edit .env and uncomment "OPTION 1: DOCKER DATABASE" section
# 3. Comment out "OPTION 2: LOCAL DATABASE" section in .env
# 4. Make sure Docker is running
# 5. Run: docker-compose up --build
# 6. Backend: http://localhost:3000/admin
# 7. Frontend: http://localhost:5173

# üíª FOR LOCAL DEVELOPMENT:
# 1. Copy this file: cp .env.example .env
# 2. Install PostgreSQL locally
# 3. Create database: CREATE DATABASE "landingpage-cms";
# 4. Keep "OPTION 2: LOCAL DATABASE" section uncommented in .env
# 5. Update DATABASE_URI with your local credentials if needed
# 6. Install dependencies: 
#    cd landingpage-cms && npm install
#    cd landingpage-frontend && npm install
# 7. Run backend: cd landingpage-cms && npm run dev
# 8. Run frontend: cd landingpage-frontend && npm run dev
# 9. Backend: http://localhost:3000/admin
# 10. Frontend: http://localhost:5173

# üöÄ FOR PRODUCTION:
# 1. Copy this file to production server
# 2. Uncomment "PRODUCTION SETTINGS" section
# 3. Update all production values with real credentials
# 4. Comment out development settings
# 5. Generate new PAYLOAD_SECRET for production
# 6. Set strong database passwords
# 7. Update CORS_ORIGINS to your production domain
# 8. Run: docker-compose up --build

# üîß QUICK ENVIRONMENT SWITCHING:
# Use the helper scripts we created:
# - For bash/Linux/Mac: ./switch-env.sh docker|local|production
# - For PowerShell/Windows: .\switch-env.ps1 docker|local|production

# üìã TROUBLESHOOTING:
# - Database connection issues? Check DATABASE_URI format
# - CORS errors? Update CORS_ORIGINS and CSRF_ORIGINS
# - Port conflicts? Change ports in docker-compose.yml
# - Secret key errors? Generate new PAYLOAD_SECRET (64+ chars)
# - Frontend API errors? Check VITE_API_URL points to backend